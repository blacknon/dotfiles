#!/bin/bash
# Copyright(c) 2021 Blacknon. All rights reserved.
# Use of this source code is governed by an MIT license
# that can be found in the LICENSE file.

# python encode
export PYTHONIOENCODING='UTF-8'

# editor
export EDITOR='vim'

# color code
export COLOR_RED=$'\E[0;31m'
export COLOR_GREEN=$'\E[0;32m'
export COLOR_ORANGE=$'\E[0;33m'
export COLOR_BLUE=$'\E[0;34m'
export COLOR_PURPLE=$'\E[0;35m'
export COLOR_CYAN=$'\E[0;36m'
export COLOR_LGRAY=$'\E[0;37m'
export COLOR_DGRAY=$'\E[1;30m'
export COLOR_LRED=$'\E[1;31m'
export COLOR_LGREEN=$'\E[1;32m'
export COLOR_YELLOW=$'\E[1;33m'
export COLOR_LBLUE=$'\E[1;34m'
export COLOR_LPURPLE=$'\E[1;35m'
export COLOR_LCYAN=$'\E[1;36m'
export COLOR_WHITE=$'\E[1;37m'
export COLOR_NONE=$'\E[0m'

# man set color
export LESS_TERMCAP_mb=${COLOR_LRED}
export LESS_TERMCAP_md=${COLOR_PURPLE}
export LESS_TERMCAP_me=${COLOR_NONE}
export LESS_TERMCAP_se=${COLOR_NONE}
export LESS_TERMCAP_so=$'\E[01;44;32m'
export LESS_TERMCAP_ue=${COLOR_NONE}
export LESS_TERMCAP_us=${COLOR_YELLOW}

# less
export LESS=-R # lessでスクロールが効くようにする

# bat
export BAT_PAGER="less -RF" # batのpagerを設定

# GOPATH(PATHより前に定義)
export GOPATH=~/_go

# PATH
# 最後に存在チェックして突っ込んでくPATHリスト
PATH_LIST=()

case ${OSTYPE} in
darwin*)
  # GOROOT
  export GOROOT=/usr/local/opt/go/libexec

  # PATH
  PATH_LIST+=("$GOROOT/bin")
  PATH_LIST+=("$GOPATH/bin")
  PATH_LIST+=("$HOME/dotfiles/AppleScripts")
  PATH_LIST+=("/usr/local/opt/ncurses/bin")
  PATH_LIST+=("/usr/local/opt/mysql-client/bin")
  PATH_LIST+=("/usr/local/opt/openssl@1.1/bin")
  PATH_LIST+=("/usr/local/opt/icu4c/bin")

  # LIBRARY_PATH
  export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/opt/ncurses/lib/"

  # LDFLAGS
  export LDFLAGS=" -L/usr/local/opt/ncurses/lib"
  export LDFLAGS=$LDFLAGS" -L/usr/local/opt/openssl@1.1/lib"

  # CPPFLAGS
  export CPPFLAGS=" -I/usr/local/opt/ncurses/include"
  export CPPFLAGS=$CPPFLAGS" -I/usr/local/opt/openssl@0.1/include"
  ;;
linux*)
  # PATH
  PATH_LIST+=("$GOPATH/bin")
  PATH_LIST+=("/usr/local/go/bin")
  ;;
esac

PATH_LIST+=("$HOME/.cargo/bin")            # Rust(Cargo)用PATH
PATH_LIST+=("$HOME/.composer/vendor/bin")  # php(composer)用のPATH
PATH_LIST+=("$HOME/.gem/ruby/bin")         # Ruby gem用PATH
PATH_LIST+=("$HOME/.nodebrew/current/bin") # NodeJS用PATH
PATH_LIST+=("$HOME/.local/bin")            # Python(pip)用PATH
PATH_LIST+=("$HOME/bin")                   # 自作スクリプト群の配置用ディレクトリPATH
PATH_LIST+=("$HOME/dotfiles/bin")          # 自作スクリプト群の配置用ディレクトリPATH

# PATHを一気に追加
for p in ${PATH_LIST[@]}; do
  if [ -d "$p" ]; then
    export PATH="$PATH:$p"
  fi
done

# ssh agent用のsockファイル
if [ -z "${SSH_CLIENT}" ]; then
  export SSH_AUTH_SOCK=~/.agent # ssh-agentのSOCK用PATH
fi

# Dockerコンテナ接続前後に実行するコマンド(`docker_runin`や`docker_login`で使う)
case ${OSTYPE} in
darwin*)
  export EXEC_BEFORE_DOCKER_IN='printf "\033]50;SetProfile=docker\a"'
  export EXEC_AFTER_DOCKER_IN='printf "\033]50;SetProfile=Default\a"'
  ;;
linux*)
  # TODO: Linux用のOSCエスケープシーケンスに書き換える
  export EXEC_BEFORE_DOCKER_IN='echo -ne "\e]10;#C0C0C0\a\e]11;#431030\a"'
  export EXEC_AFTER_DOCKER_IN='echo -ne "\e]10;#C0C0C0\a\e]11;#202020\a"'
  ;;
esac
